{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "components/languageLink/macro.njk" import languageLink %}
{% from "govuk/components/fieldset/macro.njk" import govukFieldset %}
{% from "govuk/components/date-input/macro.njk" import govukDateInput %}
{% from "components/autoInput/list/macro.njk" import autoList %}
{% from "components/autoInput/fill/macro.njk" import autoFill %}
{% from "components/autoInput/arrow/macro.njk" import autoArrow %}
{% extends "common/layout/view.njk" %}
{% set pageTitleName = 'pages.ipv.info.title' | translate %}
{% block content %}
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            {% set errorList = errorList | lastErrors(["#dob"]) %}
            {% include "components/errorSummary/errorSummary.njk" %}
        <h1 class="govuk-heading-xl">{{ 'pages.ipv.info.header' | translate }}</h1>
            <p>{{ 'pages.ipv.info.info' | translate }}</p>
            <form action="/information" method="post" class="form" novalidate>
                <input type="hidden" name="_csrf" value="{{csrfToken}}"/>
                {{ govukInput({
                label: {
                    html: 'pages.passport.start.surname.label' | translate
                },
                classes: "govuk-!-width-two-thirds",
                id: "surname",
                name: "surname",
                value: surname,
                autocomplete: "off",
                attributes: {list: "surname-list"},
                classes: autoArrow({ name: "surname", list: autoInput}),
                errorMessage: {
                        text: errors['surname'].text
                    } if (errors['surname'])
                }) }}
                {{ autoList({
                    name: "surname",
                    list: autoInput,
                    input: "surname"
                }) }}

                {{ govukInput({
                label: {
                    html: 'pages.passport.start.givenNames.label' | translate
                },
                classes: "govuk-!-width-two-thirds",
                id: "givenNames",
                name: "givenNames",
                value: givenNames,
                autocomplete: "off",
                attributes: {list: "givenNames-list"},
                classes: autoArrow({ name: "givenNames", list: autoInput}),
                errorMessage: {
                        text: errors['givenNames'].text
                    } if (errors['givenNames'])
                }) }}
                {{ autoList({
                    name: "givenNames",
                    list: autoInput,
                    input: "givenNames"
                }) }}

                {{ govukDateInput({
                id: "dob",
                namePrefix: "",
                items: [
                    {
                        id:"dobDay",
                        name:"dobDay", 
                        autocomplete: "off",
                        label: "common.dateInput.day" | translate,
                        classes: 'govuk-input--width-2 govuk-input--error' if (errors['dobDay'] or errors['dob']) else 'govuk-input--width-2',
                        value: dobDay or autoFill({ name: "dob", list: autoInput, input: "dobDay" })
                    },
                    {
                        id:"dobMonth",
                        name:"dobMonth", 
                        autocomplete: "off",
                        label: "common.dateInput.month" | translate,
                        classes: 'govuk-input--width-2 govuk-input--error' if (errors['dobMonth'] or errors['dob']) else 'govuk-input--width-2',
                        value: dobMonth or autoFill({ name: "dob", list: autoInput, input: "dobMonth" })
                    },
                    {
                        id:"dobYear",
                        name:"dobYear", 
                        autocomplete: "off",
                        label: "common.dateInput.year" | translate,
                        classes: 'govuk-input--width-4 govuk-input--error' if (errors['dobYear'] or errors['dob']) else 'govuk-input--width-4',
                        value: dobYear or autoFill({ name: "dob", list: autoInput, input: "dobYear" })
                    }
                ],
                fieldset: {
                    legend: {
                        text: "pages.passport.start.dob.label" | translate
                    }
                },
                errorMessage: {
                        text: errors['dobDay'].text or errors['dobMonth'].text or errors['dobYear'].text or errors['dob'].text
                    } if (errors['dobDay'] or errors['dobMonth'] or errors['dobYear'] or errors['dob'])
                }) }}   

                {% call govukFieldset({
                    legend: {
                    text: 'pages.ipv.info.address.legend' | translate,
                    classes: "govuk-fieldset__legend--l",
                    isPageHeading: true
                    }
                }) %}

                {{ govukInput({
                    label: {
                        html: 'pages.ipv.info.addressLine1.label' | translate | safe
                    },
                    id: "addressLine1",
                    name: "addressLine1",
                    value: addressLine1,
                    autocomplete: "address-line1",
                    errorMessage: {
                            text: errors['addressLine1'].text
                        } if (errors['addressLine1'])
                }) }}

                {{ govukInput({
                    label: {
                    html: 'pages.ipv.info.addressLine2.label' | translate | safe
                    },
                    id: "addressLine2",
                    name: "addressLine2",
                    value: addressLine2,
                    autocomplete: "address-line2"
                }) }}

                {{ govukInput({
                    label: {
                    text: 'pages.ipv.info.addressTown.label' | translate
                    },
                    classes: "govuk-!-width-two-thirds",
                    id: "addressTown",
                    name: "addressTown",
                    value: addressTown,
                    autocomplete: "address-3",
                    errorMessage: {
                            text: errors['addressTown'].text
                        } if (errors['addressTown'])
                }) }}

                {{ govukInput({
                    label: {
                    text: 'pages.ipv.info.addressCounty.label' | translate
                    },
                    classes: "govuk-!-width-two-thirds",
                    id: "addressCounty",
                    name: "addressCounty",
                    value: addressCounty,
                    autocomplete: "off"
                }) }}

                {{ govukInput({
                    label: {
                    text: 'pages.ipv.info.addressPostcode.label' | translate
                    },
                    classes: "govuk-input--width-10",
                    id: "addressPostcode",
                    name: "addressPostcode",
                    value: addressPostcode,
                    autocomplete: "postal-code" ,
                    errorMessage: {
                            text: errors['addressPostcode'].text
                        } if (errors['addressPostcode'])
                }) }}                   

                {% endcall %}

                {{ govukButton({
                    text: "common.buttons.continue" | translate
                }) }}
            </form>
        </div>
    </div>
    
{% endblock %}